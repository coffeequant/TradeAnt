#include <stdio.h>
#include <math.h>
double max(double a,double b)
{
	return (a>b)?a:b;
}

int main()
{
	double prices[200][100];
	//upstream downstream method

	double dt = 0.01;
	int i,j,k;
	double ds = 1.0;
	int nts = 100;
	int nas = 200;
	double A[200];
	double B[200];
	double D;	
	double E[200];	
	double F[200];	
	double r = 0.05;
	double sigma = 0.20;
	D = 1+r*dt;

	for(i=0;i<200;i++)		
	{
		A[i] = 1 + r*(i*ds) * dt/ds - 0.5*sigma*sigma*i*ds*i*ds*dt/(ds*ds);
		B[i] = 0.5*sigma*sigma*i*ds*i*ds*dt/(ds*ds);
		E[i] = -r*i*ds*dt/ds;
		F[i] = -0.5*sigma*sigma*i*ds*i*ds*dt/(ds*ds);		
		prices[i][0] = max(i*ds-100.0,0.0);
		printf("%.2f \t %.2f \t%.2f \t %.2f\n",A[i],B[i],E[i],F[i]);
	}
	
	for(j=1;j<nts;j++)
	{
//		if (j%2==0)
//		{
			//upstream
			if(j > 0)
			{

				prices[0][j] = prices[0][j-1]*(1-r*dt);			
			}
			for(i=1;i<nas-1;i++)
			{
				prices[i][j] = (-B[i]*prices[i-1][j]+prices[i][j-1]*D+prices[i+1][j-1]*E[i]+(prices[i+1][j-1]-prices[i][j-1])*F[i])/A[i];
				printf("%.2f\n",prices[i][j]);
			}
			prices[nas-1][j] = 2 *prices[nas-2][j] - prices[nas-3][j];
		//}
/*		else
		{	//downstream
			for(j=0;j<nas;j++)
			{
			

			}

		}		*/
	}
	printf("%.2f",prices[101][30]);		
	return 0;
}

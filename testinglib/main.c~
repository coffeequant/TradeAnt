
/*
 Copyright (C) 2012 Animesh Saxena

 This file is part of TradeAnt, a free-software/open-source library
 for traders and practical quantitative analysts

 TradeAnt is free software: you can redistribute it. Use it at your own risk
*/


#include <stdio.h>
#include <tradeant/heston1d.h>


double dip_cashflow(double spot,double time)
{
	if(time == 0.0 && spot < 93)
	{
		return (-1*(100 - spot));
	}
return 0;
}
double digital_coupons(double spot,double time)
{

//printf("\t%.2f",spot);
    if(time == (0.0) && spot > 105) { 
//printf("@@@@"); 
return 21; }
   
    return -1;
}

int main()
{
  //can be today or any other date - format is year,month,day
double dt = 0.01;
  setreftime(2012,May,15);

  //Volatility Surface
  volsurface v;
  rates r;
  initialize_rates(&r);
  r.set_constant_rate(&r,0.075);

 //Dividend Curve
  rates divs;


  int i=0;
  initialize_volsurface(&v);
        v.scale = 1;
        v.set_size(&v,72,9);
    v.constantvolatility = 0.27;
   //     v.fetch_volatility_surface(&v,"volsurface.csv");

        initialize_rates(&divs);
        divs.set_constant_rate(&divs,0.0146);	

  heston1d digital;
  initialize_heston1d(&digital);

//struct _blackscholes1d* bs,double timeslice,double expiry,double stepsize,int numberofspotsteps)
  // void (*set_model_parameters)(struct _heston1d *hs,double timeslice,double expiry,double stepsize,int numberofspotsteps,double volstepsize,int numberofvolsteps);
   //void (*set_calibration_parameters)(struct _heston1d* hs,double correlation,double meanreversion,double longtermvariance,double volofvol);
  digital.set_calibration_parameters(&digital,0,0.05,0.04,0.1);
  digital.set_model_parameters(&digital,0.01,0.792,1.0,200,0.005,200);

  digital.set_rates(&digital,r,divs);

  digital.apply_coupon = digital_coupons;
  //digital.apply_cashflow = dip_cashflow;
  results2d digitaloutput = digital.solve(&digital);

int nts = 0.792/dt;
i = 100;
for(;i<200;i++)
	printf("\nPrice:%.5f\t",digitaloutput.get_prices(&digitaloutput,i,40,nts-1));


return 0;
}
